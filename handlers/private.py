
from aiogram import F
from aiogram.types import Message
from aiogram.enums.chat_member_status import ChatMemberStatus
from config import FILMS_CHAT, TESTA
from handlers.groups import search_and_reply

def register_private_handlers(dp, bot):
    @dp.message(F.chat.type == "private")
    async def private_search(message: Message):
        user_id = message.from_user.id

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–ª–µ–Ω—Å—Ç–≤–∞ —Ö–æ—Ç—è –±—ã –≤ –æ–¥–Ω–æ–π –∏–∑ –≥—Ä—É–ø–ø
        is_member = False
        for group_id in [FILMS_CHAT, TESTA]:
            try:
                member = await bot.get_chat_member(group_id, user_id)
                if member.status not in [ChatMemberStatus.LEFT, ChatMemberStatus.KICKED]:
                    is_member = True
                    break
            except Exception:
                continue  # –µ—Å–ª–∏ –±–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º

        if not is_member:
            await message.answer("‚õî –í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –Ω–∏ –≤ –æ–¥–Ω–æ–π –∏–∑ –≥—Ä—É–ø–ø, –≥–¥–µ —è —Ä–∞–±–æ—Ç–∞—é.")
            return

        title = message.text.strip()
        if not title:
            await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –∏–ª–∏ —Å–µ—Ä–∏–∞–ª–∞.")
            return

        await message.answer(f"üîç –ò—â—É '{title}'...")
        await search_and_reply(message, title)
